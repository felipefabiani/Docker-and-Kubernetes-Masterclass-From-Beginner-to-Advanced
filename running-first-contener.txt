docker pull nginx
docker run nginx
docker run -d nginx
docker ps
docker run -d -p 8090:80 --name web-server nginx
curl http://localhost:8090/
docker ps
docker stop web-server
docker start web-server
docker images      (List images)
docker ps -a       (List containers)
docker ps --filter name=web-server
docker rm web-server (Remove/Delete containers)

docker stop $(docker ps -q)
--- 

docker run -d -p 8090:80 --name web-server nginx
docker logs -f web-server
curl http://localhost:8090/

docker exec -it web-server /bin/bash

--- creating an image--- 
vim Dockerfile
docker build .
docker images 
    REPOSITORY                       TAG           IMAGE ID       CREATED        SIZE
    <none>                           <none>        fa57bc395307   2 weeks ago    78.1MB
docker run fa57bc395307

Module 5
docker pull nginx:1.27.0
docker run -d -p 8091:80 --name web-server2 nginx:1.27.0
docker exec -it web-server2 sh 
go to /usr/share/nginx/html/index.html and edit the file

Module 6
docker login -u felipefabiani

docker build -t simple_hello_world .
docker images
    REPOSITORY                       TAG           IMAGE ID       CREATED         SIZE
    simple_hello_world               latest        fa57bc395307   2 weeks ago     78.1MB

docker tag simple_hello_world:latest felipefabiani/simple_hello_world:v0.0.1
docker images
    REPOSITORY                         TAG           IMAGE ID       CREATED         SIZE
    felipefabiani/simple_hello_world   v0.0.1        fa57bc395307   2 weeks ago     78.1MB

docker push felipefabiani/simple_hello_world:v0.0.1

create folder DOCKERFILE-nginx and Dockerfile file

docker build -t web_server_image .


Module 7

create folder containerize-express-app
npm init -y
npm install express@4.19.2 body-parser@1.20.2 --save-exact

Module 8
create folder UsingDockerignoreToSkipFiles

docker build -t hello-from-node .
docker build -t test .
docker run -d -p 5000:5000 -e APP_NAME="TEST" --name test-5000 test


create module8/03-multstage
docker build -t multstage .
docker run -p 3000:3000 -d multsatage


npm i --save-dev --save-exact typescript@5.5.3 @types/express@4.17.21
npm run build